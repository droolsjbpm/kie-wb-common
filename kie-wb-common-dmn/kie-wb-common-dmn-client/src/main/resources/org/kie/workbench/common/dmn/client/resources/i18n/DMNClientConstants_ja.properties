ExpressionEditor.ReturnToDRG="{0}" に戻る
ExpressionEditor.UndefinedExpressionType=未定義
ExpressionEditor.LiteralExpressionType=リテラル式
# auto translated by TM merge from project: selinux (policycoreutils), version: RHEL-7.5, DocId: policycoreutils
ExpressionEditor.ContextExpressionType=コンテキスト
# auto translated by TM merge from project: Drools Workbench, version: 7.3.0, DocId: org.drools/drools-wb-guided-rule-editor-client/org/drools/workbench/screens/guided/rule/client/resources/i18n/Constants
ExpressionEditor.DecisionTableExpressionType=ディシジョンテーブル
ExpressionEditor.RelationType=関連
# auto translated by TM merge from project: JBoss EAP Development Guide, version: 7.0.0, DocId: master
ExpressionEditor.FunctionType=関数
ExpressionEditor.PMMLFunctionType=PMML 関数
ExpressionEditor.JavaFunctionType=Java 関数
ExpressionEditor.InvocationType=呼び出し
# auto translated by TM merge from project: KIE Workbench - Common, version: 7.7.0, DocId: org.kie.workbench.screens/kie-wb-common-examples-screen-client/org/kie/workbench/common/screens/examples/client/resources/i18n/ExamplesScreenConstants
ExpressionEditor.Clear=クリア
LiteralExpression.EditExpression=式の編集
# auto translated by TM merge from project: Drools Workbench, version: 7.7.0, DocId: org.drools/drools-wb-guided-dtable-editor-client/org/drools/workbench/screens/guided/dtable/client/resources/i18n/GuidedDecisionTableErraiConstants
ContextEditor.InsertContextEntryAbove=行を上に挿入
# auto translated by TM merge from project: Drools Workbench, version: 7.7.0, DocId: org.drools/drools-wb-guided-dtable-editor-client/org/drools/workbench/screens/guided/dtable/client/resources/i18n/GuidedDecisionTableErraiConstants
ContextEditor.InsertContextEntryBelow=行を下に挿入
# auto translated by TM merge from project: UberFire, version: 2.4.0, DocId: org.uberfire/uberfire-wires-webapp/org/uberfire/ext/wires/client/resources/i18n/WiresGridsDemoConstants
ContextEditor.DeleteContextEntry=行の削除
ContextEditor.EditExpression=式の編集
ContextEditor.EditContextEntry=コンテキストエントリーの編集
# auto translated by TM merge from project: Drools Workbench, version: 7.7.0, DocId: org.drools/drools-wb-guided-dtable-editor-client/org/drools/workbench/screens/guided/dtable/client/resources/i18n/GuidedDecisionTableErraiConstants
RelationEditor.InsertRowAbove=行を上に挿入
# auto translated by TM merge from project: Drools Workbench, version: 7.7.0, DocId: org.drools/drools-wb-guided-dtable-editor-client/org/drools/workbench/screens/guided/dtable/client/resources/i18n/GuidedDecisionTableErraiConstants
RelationEditor.InsertRowBelow=行を下に挿入
# auto translated by TM merge from project: UberFire, version: 2.4.0, DocId: org.uberfire/uberfire-wires-webapp/org/uberfire/ext/wires/client/resources/i18n/WiresGridsDemoConstants
RelationEditor.DeleteRow=行の削除
RelationEditor.InsertColumnLeft=左に列を挿入
RelationEditor.InsertColumnRight=右に列を挿入
RelationEditor.DeleteColumn=列の削除
RelationEditor.EditRelation=関連の編集
InvocationEditor.InsertParameterAbove=パラメーターを上に挿入
InvocationEditor.InsertParameterBelow=パラメーターを下に挿入
InvocationEditor.DeleteParameter=パラメーターを削除
InvocationEditor.EditExpression=式の編集
InvocationEditor.EditParameter=パラメーターの編集
InvocationEditor.EnterFunction=関数を入力
FunctionEditor.FEEL=FEEL
FunctionEditor.JAVA=JAVA
FunctionEditor.PMML=PMML
FunctionEditor.Undefined=<Undefined>
FunctionEditor.EditExpression=式の編集
FunctionEditor.EditParameters=パラメーターの編集
FunctionEditor.EditParametersTitle=パラメーターの編集
FunctionEditor.SelectFunctionKind=関数の種類を選択
ParametersPopoverViewImpl.addParameter=パラメーターの追加
# auto translated by TM merge from project: KIE Workbench - Common, version: 7.7.0, DocId: org.kie.workbench.stunner/kie-wb-common-stunner-bpmn-api/org/kie/workbench/common/stunner/bpmn/resources/i18n/StunnerBPMNConstants
DecisionTableEditor.DescriptionColumnHeader=説明
DecisionTableEditor.OutputClauseHeader=Output 句
DecisionTableEditor.InsertInputClauseLeft=Input 句を左に挿入
DecisionTableEditor.InsertInputClauseRight=Input 句を右に挿入
DecisionTableEditor.DeleteInputClause=Input 句の削除
DecisionTableEditor.InsertOutputClauseLeft=Output 句を左に挿入
DecisionTableEditor.InsertOutputClauseRight=Output 句を右に挿入
DecisionTableEditor.DeleteOutputClause=Output 句の削除
DecisionTableEditor.InsertDecisionRuleAbove=ルールを上に挿入
DecisionTableEditor.InsertDecisionRuleBelow=ルールを下に挿入
DecisionTableEditor.DeleteDecisionRule=ルールの削除
DecisionTableEditor.DuplicateDecisionRule=複製ルール
DecisionTableEditor.NullBuiltinAggregator=<None>
DecisionTableEditor.EditHitPolicy=ヒットポリシーの編集
DecisionTableEditor.EditInputClause=Input 句の編集
DecisionTableEditor.EditOutputClause=Output 句の編集
DecisionTableEditor.HitPolicyLabel=ヒットポリシー
DecisionTableEditor.BuiltinAggregatorLabel=ビルドインアグリゲーター
UndefinedExpressionEditor.SelectorTitle=論理タイプの選択
UndefinedExpressionEditor.SelectExpression=式の選択
DecisionNavigatorPresenter.DecisionNavigator=Decision Navigator
DecisionNavigatorBaseItemFactory.NoName=- 名前なし -
TypePickerWidget.Choose=選択...
TypePickerWidget.Manage=管理
DataTypeManager.None=名前を挿入
DataTypeManager.Structure=構造
DataTypeModalView.Header=カスタムデータ型の管理
DataTypeModalView.Cancel=キャンセル
DataTypeModalView.Save=保存
DataTypeSelectView.DefaultTitle=デフォルト
DataTypeSelectView.CustomTitle=カスタム
DataTypeTreeGridView.AttributeName=属性名
DataTypeTreeGridView.Type=タイプ
DataTypeTreeGridView.Required=(* 必須)
DataTypeListItemView.Edit=編集
DataTypeListItemView.Save=保存
DataTypeListItemView.Remove=削除
DataTypeListItemView.InsertFieldAbove=フィールドを上に挿入
DataTypeListItemView.InsertFieldBelow=フィールドを下に挿入
DataTypeListItemView.InsertNestedField=ネストされたフィールドを挿入
DataTypeListItemView.MoveUp=上に移動
DataTypeListItemView.MoveDown=下に移動
# auto translated by TM merge from project: KIE Workbench - Common, version: 7.13.0, DocId: org.kie.workbench/kie-wb-common-dmn-client/org/kie/workbench/common/dmn/client/resources/i18n/DMNClientConstants
DataTypeListItemView.Name=名前
# auto translated by TM merge from project: KIE Workbench - Common, version: 7.13.0, DocId: org.kie.workbench/kie-wb-common-dmn-client/org/kie/workbench/common/dmn/client/resources/i18n/DMNClientConstants
DataTypeListItemView.Type=タイプ
DataTypeListItemView.ArrowKeysTooltip=矢印を使ってデータ型に移動します
DataTypeListView.Title=カスタムデータ型
DataTypeListView.CollapsedText=データ型は、DMN ボックス式で使用されるデータ構造を決定します。基本的なデータ型  (ブール値など) を使用するか、このダイアログを使用してカスタムデータ型を作成します。
DataTypeListView.ViewMore=詳細表示
DataTypeListView.ViewLess=簡易表示
DataTypeListView.NoCustomDataTitle=定義されたカスタムデータ型はありません。
DataTypeListView.NoCustomData1=表示または編集可能なカスタムデータ型はありません。
DataTypeListView.NoCustomData2=開始するには、カスタムデータ型を追加してください
DataTypeListView.NoCustomDataTypesFound1=カスタムデータ型が見つかりませんでした。
DataTypeListView.NoCustomDataTypesFound2=別のデータ型の名前を試してください。
DataTypeListView.Add=追加
DataTypeListView.ExpandedText1=データ型は、DMN ボックス式で使用されるデータ構造を決定します。基本的なデータ型  (ブール値など) を使用するか、このダイアログを使用してカスタムデータ型を作成します。
DataTypeListView.ExpandedText2=このダイアログで作成できるカスタムデータ型は、Simple または Structured です。
DataTypeListView.ExpandedText3=データ型には、名前と型だけが割り当てられています。例\: "Age (Number)"
DataTypeListView.ExpandedText4=データ型にはフィールドが含まれ、より複雑になります。たとえば、"Person" 型に"name (String), age (Number), email (String)" などの複数のフィールドを定義できます。
DataTypeListView.Simple=Simple
DataTypeListView.Structured=Structured
DataTypeListView.ExpandAll=すべてを展開
DataTypeListView.CollapseAll=すべてを折りたたむ
NameAndDataTypePopover.NameLabel=名前
NameAndDataTypePopover.DataTypeLabel=データ型
NameIsBlankErrorMessage.StrongMessage=データ型の名前は空白にできません。
NameIsBlankErrorMessage.RegularMessage=データ型の名前を入力してください。
NameIsInvalidErrorMessage.StrongMessage=データ型の名前は、文字、クエスチョンマーク「?」またはアンダースコア「_」 で始める必要があり、「and」や「true」または「every」といった言語のキーワードで始めることはできません。\n.
NameIsInvalidErrorMessage.RegularMessage=別のデータ型の名前を使用してください。
NameIsNotUniqueErrorMessage.StrongMessage=データ型 "{0}" は既に存在しています。
NameIsNotUniqueErrorMessage.RegularMessage=別のデータ型の名前を使用してください。
DataTypeWithFieldsWarningMessage.StrongMessage=この変更により、この構造の一部であるフィールドはすべて削除されます。
DataTypeWithFieldsWarningMessage.RegularMessage=このデータ型を変更してもよろしいですか?
ReferencedDataTypeWarningMessage.StrongMessage="{0}" タイプのデータ型はすべて削除されます。
ReferencedDataTypeWarningMessage.RegularMessage=このデータ型を削除してもよろしいですか?
NameIsDefaultTypeMessage.StrongMessage=データ型の名前はデフォルト型にできません。
NameIsDefaultTypeMessage.RegularMessage=別のデータ型の名前を使用してください。
DataTypeFlashMessagesView.Ok=OK
DataTypeFlashMessagesView.Cancel=取り消し
DataTypeListItemView.Constraints=制約\: {0}
# auto translated by TM merge from project: KIE Workbench - Common, version: 7.6.0, DocId: org.kie.workbench.screens/kie-wb-common-data-modeller-client/org/kie/workbench/common/screens/datamodeller/client/resources/i18n/Constants
DataTypeListItemView.List=一覧
DataTypeListItemView.Yes=はい
SmallSwitchComponentView.Yes=はい
SmallSwitchComponentView.No=いいえ
DataTypesPage.Label=データ型
DataTypeSearchBarView.Search=検索...
DataTypeConstraintView.Constraints=制約
DataTypeConstraintView.ConstraintsTooltip=データ型に有効な入力を制限し定義するための制約を追加します。
DataTypeConstraintModalView.BodyParagraph1=このデータ型に有効な入力を制限し定義するための
DataTypeConstraintModalView.BodyParagraph2=制約を追加します。
DataTypeConstraintModalView.BodyParagraph3=制約型を選択
DataTypeConstraintModalView.Header=データ型の制約
# auto translated by TM merge from project: KIE Workbench - Common, version: 7.6.0, DocId: org.kie.workbench.screens/kie-wb-common-server-ui-client/org/kie/workbench/common/screens/server/management/client/resources/i18n/Constants
DataTypeConstraintModalView.Select=選択
DataTypeConstraintModalView.Enumeration=リスト
DataTypeConstraintModalView.Expression=式
# auto translated by TM merge from translation memory: gtk3, unique id: gtk3:rhel-7.3.0:gtk30:87ba2ecc8b6915e8bd6f5089918229fd
DataTypeConstraintModalView.Range=範囲
DataTypeConstraintModalView.ClearAll=すべて消去
# auto translated by TM merge from project: KIE Workbench - Common, version: 7.15.0, DocId: org.kie.workbench/kie-wb-common-dmn-client/org/kie/workbench/common/dmn/client/resources/i18n/DMNClientConstants
DataTypeConstraintModalView.Ok=OK
# auto translated by TM merge from project: KIE Workbench - Common, version: 7.15.0, DocId: org.kie.workbench/kie-wb-common-dmn-client/org/kie/workbench/common/dmn/client/resources/i18n/DMNClientConstants
DataTypeConstraintModalView.Cancel=取り消し
DataTypeConstraintModalView.SelectConstraintType=制約型を選択
DataTypeConstraintExpressionView.ProTip=構文のヒント\: 日付は、リテラル文字列と date() 組み込み関数を使って表示することができます。セマンティックドメインでの日付は、年、月、日の順の数字になります。年の範囲は [-999,999,999..999,999,999] です。必要な場合は、valuedt 関数を含め、日付の値は日時の値と同等とみなされます。この場合、時間は UTC 午前 0 時 (00\:00\:00) です。
DataTypeConstraintExpressionView.Placeholder=有効な式を入力
