<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>org.kie.workbench.services</groupId>
    <artifactId>kie-wb-common-compiler</artifactId>
    <version>7.9.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>kie-wb-common-compiler-distribution</artifactId>

  <name>Kie Workbench - Common - Compiler - Distribution</name>
  <description>Kie Workbench - Common - Compiler - Distribution</description>
  <packaging>war</packaging>

  <properties>
    <java.module.name>org.kie.wb.common.services.backend.compiler.distribution</java.module.name>
    <!-- Cargo properties-->
    <cargo.container.id/>
    <deployable.groupId>org.kie.workbench.services</deployable.groupId>
    <deployable.artifactId>kie-wb-common-compiler-distribution</deployable.artifactId>
    <deployable.version>${version.org.kie}</deployable.version>
    <deployable.classifier/>
    <deployable.context>kie-maven-compiler</deployable.context>
    <deployment.timeout>90000</deployment.timeout>
    <container.host>localhost</container.host>
    <container.port>8090</container.port>
    <kie.compiler.url>http://${container.host}:${container.port}/${deployable.context}</kie.compiler.url>
    <deployable.classifier.wildfly11>wildfly11</deployable.classifier.wildfly11>
    <deployable.classifier.eap7>eap7</deployable.classifier.eap7>
    <deployable.classifier.swarm>swarm</deployable.classifier.swarm>
    <version.wildfly11>11.0.0.Final</version.wildfly11>
    <!-- end cargo props-->
  </properties>

  <!-- <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.kie.workbench.services</groupId>
        <artifactId>kie-wb-common-compiler-core</artifactId>
        <version>${version.org.kie}</version>
      </dependency>
      <dependency>
        <groupId>org.kie.workbench.services</groupId>
        <artifactId>kie-wb-common-compiler-service</artifactId>
        <version>${version.org.kie}</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-core-uberjar</artifactId>
        <version>${version.org.codehaus.cargo}</version>
      </dependency>

      <dependency>
        <groupId>org.kie.workbench.services</groupId>
        <artifactId>kie-wb-common-compiler-distribution</artifactId>
        <type>war</type>
        <version>${version.org.kie}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement> -->

  <dependencies>
    <dependency>
      <groupId>org.kie.workbench.services</groupId>
      <artifactId>kie-wb-common-compiler-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.kie.workbench.services</groupId>
      <artifactId>kie-wb-common-compiler-service</artifactId>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-nio2-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-nio2-model</artifactId>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-services-api</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-nio2-jgit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jgit</groupId>
      <artifactId>org.eclipse.jgit</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>commons-logging</artifactId>
          <groupId>commons-logging</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- test -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-testing-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-test-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-nio2-fs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-servlet-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-server</artifactId>
    </dependency>

    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-commons</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.weld.se</groupId>
      <artifactId>weld-se-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.ws.rs</groupId>
      <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
    </dependency>

    <!-- Arquillian -->
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.container</groupId>
      <artifactId>arquillian-container-test-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.container</groupId>
      <artifactId>arquillian-container-spi</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.protocol</groupId>
      <artifactId>arquillian-protocol-servlet</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap</groupId>
      <artifactId>shrinkwrap-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-api-maven</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-spi</artifactId>
      <scope>test</scope>
    </dependency>
    <!--<dependency>-->
      <!--<groupId>org.jboss.shrinkwrap.resolver</groupId>-->
      <!--<artifactId>shrinkwrap-resolver-spi-maven-archive</artifactId>-->
      <!--<scope>test</scope>-->
    <!--</dependency>-->
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-depchain</artifactId>
      <type>pom</type>
      <scope>test</scope>
      <!--There is a problem with Aether https://issues.jboss.org/browse/SHRINKRES-174 -->
    </dependency>
    <dependency>
      <groupId>org.wildfly.arquillian</groupId>
      <artifactId>wildfly-arquillian-container-managed</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- errai -->
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-jboss-as-support</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-marshalling</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-bus</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-security-server</artifactId>
    </dependency>

    <!-- resteasy-->
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-multipart-provider</artifactId>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-metadata-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.kie.soup</groupId>
      <artifactId>kie-soup-project-datamodel-commons</artifactId>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/filtered-resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <filtering>true</filtering>
        <directory>src/test/projects</directory>
      </testResource>
      <testResource>
        <filtering>true</filtering>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>

    <pluginManagement>
      <plugins>

       <!-- <plugin>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven2-plugin</artifactId>
          <version>1.6.7</version>
          <configuration>
            <container>
              <containerId>wildfly11x</containerId>
              <systemProperties>
                <kie.maven.settings.custom>${project.build.testOutputDirectory}/settings.xml</kie.maven.settings.custom>
                <java.security.egd>file:/dev/./urandom</java.security.egd>
              </systemProperties>
            </container>
            <deployables>
              <deployable>
                <groupId>org.kie.workbench.services</groupId>
                <artifactId>kie-wb-common-compiler-distribution</artifactId>
                <type>war</type>
                <properties>
                  <context>${deployable.context}</context>
                </properties>
                <pingURL>${kie.compiler.url}</pingURL>
                <pingTimeout>${deployment.timeout}</pingTimeout>
              </deployable>
            </deployables>
            <configuration>
              <properties>
                <cargo.logging>high</cargo.logging>
                <cargo.servlet.port>${container.port}</cargo.servlet.port>
                <cargo.servlet.users>
                  admin:admin1234;:admin|restAll:restAll1234;:admin,rest-all|restProject:restProject1234;:admin,rest-project|noRest:noRest1234;:admin
                </cargo.servlet.users>
              </properties>
            </configuration>
          </configuration>
          <executions>
            <execution>
              <id>start-container</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>
            <execution>
              <id>stop-container</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>stop</goal>
              </goals>
            </execution>
          </executions>
        </plugin>-->

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <configuration>
            <systemPropertyVariables>
              <kie.compiler.url>${kie.compiler.url}</kie.compiler.url>
            </systemPropertyVariables>
            <failIfNoTests>false</failIfNoTests>
            <argLine>-Xmx1024m -Dfile.encoding=UTF-8</argLine>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>


    <plugins>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <apple.awt.UIElement>true</apple.awt.UIElement>
            <org.uberfire.nio.git.daemon.enabled>false</org.uberfire.nio.git.daemon.enabled>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.wildfly</groupId>
                  <artifactId>wildfly-dist</artifactId>
                  <version>11.0.0.Final</version>
                  <type>zip</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
      </plugin>
    </plugins>
  </build>


  <profiles>
    <profile>
      <id>widlfly-managed</id>
      <!--<activation>
        <activeByDefault>true</activeByDefault>
      </activation>-->
      <build>
        <testResources>
          <testResource>
            <directory>src/test/resources</directory>
          </testResource>
        </testResources>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.wildfly</groupId>
                      <artifactId>wildfly-dist</artifactId>
                      <version>11.0.0.Final</version>
                      <type>zip</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>${project.build.directory}</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- deployments profiles for testing -->
    <!-- <profile>
       <id>kie-wb-common-compiler-distribution</id>
       <properties>
         <deployable.groupId>org.kie.workbench.services</deployable.groupId>
         <deployable.artifactId>kie-wb-common-compiler-distribution</deployable.artifactId>
         <deployable.version>${version.org.kie}</deployable.version>
         <deployable.context>kie-compiler</deployable.context>
       </properties>
     </profile>-->
    <!-- end of deployments profiles-->

    <!-- Containers -->
    <profile>
      <id>wildfly11</id>
      <!--<activation>
        <activeByDefault>true</activeByDefault>
      </activation>-->
      <dependencies>
        <!-- <dependency>
           <groupId>org.kie.workbench.services</groupId>
           <artifactId>kie-wb-common-compiler-distribution</artifactId>
           <classifier>${deployable.classifier.wildfly11}</classifier>
           <type>war</type>
         </dependency>-->
      </dependencies>
      <properties>
        <cargo.container.id>wildfly11x</cargo.container.id>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <type>installed</type>
                  <artifactInstaller>
                    <groupId>org.wildfly</groupId>
                    <artifactId>wildfly-dist</artifactId>
                    <version>${version.wildfly11}</version>
                  </artifactInstaller>
                </container>
                <configuration>
                  <properties>
                    <cargo.jboss.configuration>standalone-full</cargo.jboss.configuration>
                    <cargo.jvmargs>-Xmx1024m</cargo.jvmargs>
                  </properties>
                </configuration>
                <deployables>
                  <deployable>
                    <groupId>${deployable.groupId}</groupId>
                    <artifactId>${deployable.artifactId}</artifactId>
                    <type>war</type>
                  </deployable>
                </deployables>
              </configuration>
              <executions>
                <execution>
                  <id>start-container</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                    <goal>start</goal>
                  </goals>
                </execution>
                <execution>
                  <id>stop-container</id>
                  <phase>post-integration-test</phase>
                  <goals>
                    <goal>stop</goal>
                  </goals>
                </execution>
              </executions>

            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>


    <profile>
      <id>eap7</id>
      <!--<activation>
   <property>
     <name>container</name>
     <value>eap7</value>
   </property>
 </activation>-->
      <dependencies>
        <!--<dependency>
          <groupId>org.kie.workbench.services</groupId>
          <artifactId>kie-wb-common-compiler-distribution</artifactId>
          <classifier>${deployable.classifier.eap7}</classifier>
          <scope>test</scope>
          <type>war</type>
        </dependency>-->
      </dependencies>
      <properties>
        <!-- The EAP 7.x binary can't be anonymously downloaded due to license issues. It can be downloaded manually
        and for free (e.g. from http://www.jboss.org/products/eap/download/) and the zip location needs to be specified
        here or via system property when running the build (don't forget to use the `file://` prefix when
        referencing the zip from local filesystem). -->
        <eap7.download.url>valid-url-for-eap-7-zip-needs-to-be-specified-here-or-via-cmd-line</eap7.download.url>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <type>installed</type>
                  <!-- WildFly ~= EAP 7, so just reuse the wildfly10x containerId -->
                  <containerId>wildfly11x</containerId>
                  <type>installed</type>
                  <zipUrlInstaller>
                    <url>${eap7.download.url}</url>
                  </zipUrlInstaller>
                </container>
                <configuration>
                  <properties>
                    <cargo.jboss.configuration>standalone-full</cargo.jboss.configuration>
                    <cargo.jvmargs>-Xmx1024m</cargo.jvmargs>
                  </properties>
                </configuration>
                <deployables>
                  <deployable>
                    <groupId>${deployable.groupId}</groupId>
                    <artifactId>${deployable.artifactId}</artifactId>
                    <classifier>${deployable.classifier.eap7}</classifier>
                    <type>war</type>
                  </deployable>
                </deployables>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>wildfly-swarm</id>
      <!--<activation>
    <property>
      <name>container</name>
      <value>wildfly-swarm</value>
    </property>
  </activation>
  -->
      <properties>
        <deployable.context/>
        <cargo.maven.skip>true</cargo.maven.skip>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.kie.workbench.services</groupId>
          <artifactId>kie-wb-common-compiler-distribution</artifactId>
          <classifier>${deployable.classifier.swarm}</classifier>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.wildfly.swarm</groupId>
              <artifactId>wildfly-swarm-plugin</artifactId>
              <executions>
                <execution>
                  <id>start</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                    <goal>multistart</goal>
                  </goals>
                  <configuration>
                    <properties>
                      <!-- Not ideal as it relies on the module structure, but for now it is safe to assume that all testing modules
+                         are children of this one.-->
                      <swarm.project.stage.file>${project.build.testOutputDirectory}/sample-swarm-config.yml</swarm.project.stage.file>
                      <swarm.logging>INFO</swarm.logging>
                      <swarm.bind.address>127.0.0.1</swarm.bind.address>
                      <org.uberfire.nio.git.dir>${project.build.directory}/wb-dirs</org.uberfire.nio.git.dir>
                      <org.uberfire.nio.git.ssh.cert.dir>${project.build.directory}/wb-dirs</org.uberfire.nio.git.ssh.cert.dir>
                      <org.uberfire.metadata.index.dir>${project.build.directory}/wb-dirs</org.uberfire.metadata.index.dir>
                      <org.guvnor.m2repo.dir>${project.build.directory}/wb-dirs</org.guvnor.m2repo.dir>
                    </properties>
                    <processes>
                      <process>
                        <groupId>org.kie</groupId>
                        <artifactId>${deployable.artifactId}-webapp</artifactId>
                        <classifier>${deployable.classifier.swarm}</classifier>
                      </process>
                      <properties>
                        <start.timeout.seconds>120</start.timeout.seconds>
                      </properties>
                    </processes>
                  </configuration>
                </execution>
                <execution>
                  <id>stop</id>
                  <phase>post-integration-test</phase>
                  <goals>
                    <goal>stop</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>productized</id>
      <activation>
        <property>
          <name>productized</name>
        </property>
      </activation>
      <properties>
        <deployable.classifier.eap7>eap7-redhat</deployable.classifier.eap7>
        <deployable.classifier.wildfly11>there-is-no-wildfly11-war-for-product</deployable.classifier.wildfly11>
      </properties>
    </profile>

  </profiles>
</project>